{
    "kind": "Scheduled",
    "properties": {
        "description": "'Identifies an IP address that had 15 failed attempts to sign in via SSH in a 4 hour block during a 24 hour time period.'\n",
        "severity": "Medium",
        "requiredDataConnectors": [
            {
                "connectorId": "Syslog",
                "dataTypes": [
                    "Syslog"
                ]
            }
        ],
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
            "CredentialAccess"
        ],
        "relevantTechniques": [
            "T1110"
        ],
        "query": "\nlet timeframe = 1d;\nlet threshold = 15;\nSyslog\n| where TimeGenerated >= ago(timeframe)\n| where SyslogMessage contains \"Failed password for invalid user\"\n| where SyslogMessage contains \"ssh2\" \n| parse kind=relaxed SyslogMessage with * \"invalid user\" user \" from \" ip \" port\" port \" ssh2\"\n| project user, ip, port, SyslogMessage, EventTime\n| summarize EventTimes = makelist(EventTime), PerHourCount = count() by ip, bin(EventTime, 4h), user\n| where PerHourCount > threshold\n| mvexpand EventTimes\n| extend EventTimes = tostring(EventTimes) \n| summarize StartTimeUtc = min(EventTimes), EndTimeUtc = max(EventTimes), UserList = makeset(user), sum(PerHourCount) by IPAddress = ip\n| extend UserList = tostring(UserList) \n| extend timestamp = StartTimeUtc, IPCustomEntity = IPAddress, AccountCustomEntity = UserList",
        "displayName": "SSH Potential Brute Force",
        "enabled": true,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false
    }
}