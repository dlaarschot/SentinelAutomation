{
    "kind": "Scheduled",
    "properties": {
        "description": "'Identifies a match in SecurityEvent table from any Email IOC from TI'\n",
        "severity": "Medium",
        "requiredDataConnectors": [
            {
                "connectorId": "ThreatIntelligence",
                "dataTypes": [
                    "ThreatIntelligenceIndicator"
                ]
            },
            {
                "connectorId": "SecurityEvents",
                "dataTypes": [
                    "SecurityEvent"
                ]
            }
        ],
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
            "Impact"
        ],
        "query": "\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet emailregex = @'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$';\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n//Filtering the table for Email related IOCs\n| where isnotempty(EmailRecipient)\n| join (\n    SecurityEvent | where TimeGenerated >= ago(dt_lookBack) and isnotempty(TargetUserName)\n    //Normalizing the column to lower case for exact match with EmailRecipient column\n    | extend TargetUserName = tolower(TargetUserName)\n    // renaming timestamp column so it is clear the log this came from SecurityEvent table\n    | extend SecurityEvent_TimeGenerated = TimeGenerated\n)\non $left.EmailRecipient == $right.TargetUserName\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, SecurityEvent_TimeGenerated, \nEmailSenderName, EmailSourceDomain, EmailSourceIpAddress, EmailSubject, FileHashValue, FileHashType, Computer, EventID, TargetUserName, Activity, IpAddress, AccountType, \nLogonTypeName, LogonProcessName, Status, SubStatus \n| extend timestamp = SecurityEvent_TimeGenerated, AccountCustomEntity = TargetUserName, IPCustomEntity = IpAddress, HostCustomEntity = Computer, URLCustomEntity = Url",
        "displayName": "(Preview) TI map Email entity to SecurityEvent",
        "enabled": true,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false
    }
}