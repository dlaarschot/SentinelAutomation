{
    "kind": "Scheduled",
    "properties": {
        "description": "'Identifies a match in DnsEvent table from any Domain IOC from TI'\n",
        "severity": "Medium",
        "requiredDataConnectors": [
            {
                "connectorId": "DNS",
                "dataTypes": [
                    "DnsEvents"
                ]
            },
            {
                "connectorId": "ThreatIntelligence",
                "dataTypes": [
                    "ThreatIntelligenceIndicator"
                ]
            }
        ],
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
            "Impact"
        ],
        "query": "\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where isnotempty(DomainName)\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where ExternalIndicatorId startswith 'domain'\n| join (\n     DnsEvents\n    | where TimeGenerated > ago(dt_lookBack)\n    //Extract domain patterns from syslog message\n    | where isnotempty(Name)\n    | extend parts = split(Name, '.')\n    //Split out the TLD\n    | extend tld = parts[(array_length(parts)-1)]\n    //Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n    | where tld in~ (list_tlds)\n    | extend DNS_TimeGenerated = TimeGenerated\n) on $left.DomainName==$right.Name\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Url, DNS_TimeGenerated, Computer, ClientIP, Name, QueryType\n| extend timestamp = DNS_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = ClientIP, URLCustomEntity = Url\n",
        "displayName": "(Preview) TI map Domain entity to DnsEvent",
        "enabled": true,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false
    }
}